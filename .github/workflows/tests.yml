name: Tests

on:
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - '**'
  pull_request:
    paths-ignore:
      - 'docs/**'
    branches:
      - '**'

# Automatically stop old builds on the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  lint:
    name: Pre-commit Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Install Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Linting - Run pre-commit checks
        uses: pre-commit/action@v3.0.1

  smoke_test:
    name: Smoke Test
    strategy:
      matrix:
        os:
          - ubuntu-latest
        environment:
          - py312
    uses: ./.github/workflows/test.yml
    with:
      os: ${{ matrix.os }}
      environment: ${{ matrix.environment }}
      docker-services: |
        postgres
        zoo

  postgres_test:
    name: Postgres Tests
    needs: [smoke_test]
    strategy:
      matrix:
        os:
          - ubuntu-latest
        environment:
          - py39all
          - py310all
          - py311all
    uses: ./.github/workflows/test.yml
    with:
      os: ${{ matrix.os }}
      environment: ${{ matrix.environment }}
      docker-services: |
        postgres
        zoo
      pytest-arguments: --polars --ibis --pdtransform


  duckdb_test:
    name: DuckDB Tests
    needs: [smoke_test]
    strategy:
      matrix:
        os:
          - ubuntu-latest
        environment:
          - py39all
          - py312all
    uses: ./.github/workflows/test.yml
    with:
      os: ${{ matrix.os }}
      environment: ${{ matrix.environment }}
      docker-services: |
        zoo
      pytest-arguments: --duckdb -m duckdb --polars --ibis --pdtransform

  db2_test:
    name: DB2 Tests
    needs: [smoke_test]
    strategy:
      matrix:
        os:
          - ubuntu-latest
        environment:
          - py39ibm
          - py312ibm
    uses: ./.github/workflows/test.yml
    with:
      os: ${{ matrix.os }}
      environment: ${{ matrix.environment }}
      docker-services: |
        zoo
        ibm_db2
      # --polars and --ibis not supported
      pytest-arguments: --ibm_db2 -m ibm_db2 --pdtransform

  mssql_test:
    name: MSSql Tests
    needs: [smoke_test]
    strategy:
      matrix:
        os:
          - ubuntu-latest
        environment:
          - py39all
          - py311all
    uses: ./.github/workflows/test.yml
    with:
      os: ${{ matrix.os }}
      environment: ${{ matrix.environment }}
      docker-services: |
        mssql
        zoo
      pytest-arguments: --mssql -m mssql --polars --ibis --pdtransform

  orchestration_test:
    name: Orchestration Tests
    needs: [smoke_test]
    strategy:
      matrix:
        os:
          - ubuntu-latest
        environment:
          - py311all
    uses: ./.github/workflows/test.yml
    with:
      os: ${{ matrix.os }}
      environment: ${{ matrix.environment }}
      docker-services: |
        postgres
        zoo
      pytest-arguments: --dask --prefect -m "dask or prefect"

  pandas1_sqlalchemy1_test:
    name: Pandas 1.x and SQLAlchemy 1.x Tests
    needs: [smoke_test]
    strategy:
      matrix:
        os:
          - ubuntu-latest
        environment:
          - py39pdsa1all
          - py311pdsa1all
    uses: ./.github/workflows/test.yml
    with:
      os: ${{ matrix.os }}
      environment: ${{ matrix.environment }}
      docker-services: |
        postgres
        zoo
      pytest-arguments: --polars --ibis --pdtransform

  snowflake_test:
    name: Snowflake Tests
    needs: [smoke_test]
    strategy:
      matrix:
        os:
          - ubuntu-latest
        environment:
          - py311pdsa1all
    uses: ./.github/workflows/test.yml
    secrets:
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
    with:
      os: ${{ matrix.os }}
      environment: ${{ matrix.environment }}
      docker-services: |
        postgres
        zoo
      pytest-arguments: --polars --ibis --pdtransform --snowflake
