name: Tests

on:
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - '**'
  pull_request:
    paths-ignore:
      - 'docs/**'
    branches:
      - '**'

env:
  SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
  SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
  SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}

jobs:
  lint:
    name: Pre-commit Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Install Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Linting - Run pre-commit checks
        uses: pre-commit/action@v3.0.1

  smoke_test:
    name: Smoke Test
    strategy:
      matrix:
        os:
          - ubuntu-latest
        environment:
          - py312
    uses: ./.github/workflows/test.yml
    with:
      os: ${{ matrix.os }}
      environment: ${{ matrix.environment }}
      docker-services: |
        postgres
        zoo

  postgres_test:
    name: Postgres Tests
    strategy:
      matrix:
        os:
          - ubuntu-latest
        environment:
          - py39all
          - py310all
          - py311all
    uses: ./.github/workflows/test.yml
    with:
      os: ${{ matrix.os }}
      environment: ${{ matrix.environment }}
      docker-services: |
        postgres
        zoo
      pytest-arguments: --polars --ibis --pdtransform


  duckdb_test:
    name: DuckDB Tests
    strategy:
      matrix:
        os:
          - ubuntu-latest
        environment:
          - py39all
          - py312all
    uses: ./.github/workflows/test.yml
    with:
      os: ${{ matrix.os }}
      environment: ${{ matrix.environment }}
      docker-services: |
        zoo
      pytest-arguments: --duckdb -m duckdb --polars --ibis --pdtransform

  db2_test:
    name: DB2 Tests
    strategy:
      matrix:
        os:
          - ubuntu-latest
        environment:
          - py311all
    uses: ./.github/workflows/test.yml
    with:
      os: ${{ matrix.os }}
      environment: ${{ matrix.environment }}
      docker-services: |
        zoo
        ibm_db2
      # --polars and --ibis not supported
      pytest-arguments: --ibm_db2 -m ibm_db2 --pdtransform

  # mssql_test:
  #   name: "MSSql Tests"  # - ${{ matrix.os }} / ${{ matrix.python-version }}"
  #   needs: [smoke_test]
  #   runs-on: ${{ matrix.os }}-latest
  #   timeout-minutes: 15
  #   strategy:
  #     matrix:
  #       os: [Ubuntu]
  #       environment: ['py39all', 'py311all']
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup Environment
  #       uses: ./.github/actions/setup
  #       with:
  #         environments: ${{ matrix.environment }}
  #         docker-services: |
  #           mssql
  #           zoo

  #     - name: Install Microsoft ODBC
  #       run: sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18

  #     - name: Run Tests
  #       uses: ./.github/actions/test
  #       with:
  #         environment: ${{ matrix.environment }}
  #         arguments: --workers 4 --mssql -m mssql --polars --ibis --pdtransform

  # orchestration_tests:
  #   name: "Orchestration Tests"  # - ${{ matrix.os }} / ${{ matrix.python-version }}"
  #   needs: [ smoke_test ]
  #   runs-on: ${{ matrix.os }}-latest
  #   timeout-minutes: 10
  #   strategy:
  #     matrix:
  #       os: [ Ubuntu ]
  #       environment: [ 'py311all' ]
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup Environment
  #       uses: ./.github/actions/setup
  #       with:
  #         environments: ${{ matrix.environment }}
  #         docker-services: |
  #           postgres
  #           zoo

  #     - name: Run Tests
  #       uses: ./.github/actions/test
  #       with:
  #         environment: ${{ matrix.environment }}
  #         arguments: --workers 4 --dask --prefect -m "dask or prefect"

  # pandas1_sqlalchemy1_test:
  #   name: "Pandas 1.x and SQLAlchemy 1.x Tests - ${{ matrix.os }} / ${{ matrix.python-version }}"
  #   needs: [smoke_test]
  #   runs-on: ${{ matrix.os }}-latest
  #   timeout-minutes: 10
  #   strategy:
  #     matrix:
  #       os: [Ubuntu]
  #       environment: ['py39pdsa1all', 'py311pdsa1all']
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup Environment
  #       uses: ./.github/actions/setup
  #       with:
  #         environments: ${{ matrix.environment }}
  #         docker-services: |
  #           postgres
  #           zoo

  #     - name: Run Tests
  #       uses: ./.github/actions/test
  #       with:
  #         environment: ${{ matrix.environment }}
  #         arguments: --workers 4 --polars --ibis --pdtransform

  # snowflake_test:
  #   name: "Snowflake Tests - ${{ matrix.os }} / ${{ matrix.python-version }}"
  #   needs: [smoke_test]
  #   runs-on: ${{ matrix.os }}-latest
  #   timeout-minutes: 20
  #   strategy:
  #     matrix:
  #       os: [Ubuntu]
  #       environment: ['py311pdsa1all']
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup Environment
  #       uses: ./.github/actions/setup
  #       with:
  #         environments: ${{ matrix.environment }}
  #         docker-services: |
  #           postgres
  #           zoo

  #     - name: Run Tests
  #       uses: ./.github/actions/test
  #       with:
  #         environment: ${{ matrix.environment }}
  #         arguments: --workers 4 --polars --ibis --pdtransform --snowflake -s
