name: Tests

on:
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - '**'
  pull_request:
    paths-ignore:
      - 'docs/**'
    branches:
      - '**'

env:
  DEBUG: 1

jobs:


  db2_test_4:
    name: "DB2 Tests (4) - ${{ matrix.os }} / ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 30
    strategy:
      matrix:
        os: [Ubuntu]
        python-version: ['3.11']
    services:
      ibm_db2:
        image: ibmcom/db2:11.5.5.1
        env:
          LICENSE: accept
          DB2INSTANCE: db2inst1
          DB2INST1_PASSWORD: password
          DBNAME: testdb
          UPDATEAVAIL: "NO"
        options: --privileged
        ports:
          - 50000:50000
    steps:
      - uses: actions/checkout@v3

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
          poetry-flags: --all-extras --with=tests

      - name: Start Docker Compose
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: ./docker-compose.yaml

      - name: Wait for Docker Servers
        timeout-minutes: 1
        shell: bash
        run: |
          until bash ./.github/workflows/resources/docker_compose_ready.sh; do
            sleep 2
          done

      - name: Wait for DB/2
        timeout-minutes: 2
        run: |
          until docker logs "${{ job.services.ibm_db2.id }}" 2>&1 | grep -q "Setup has completed"; do 
            sleep 10
            echo Waiting
          done

      - name: Run Tests
        uses: ./.github/actions/test
        with:
          arguments: --ibm_db2 -m ibm_db2

  db2_test_5:
    name: "DB2 Tests (5) - ${{ matrix.os }} / ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 30
    strategy:
      matrix:
        os: [Ubuntu]
        python-version: ['3.11']
    services:
      ibm_db2:
        image: ibmcom/db2:11.5.5.1
        env:
          LICENSE: accept
          DB2INSTANCE: db2inst1
          DB2INST1_PASSWORD: password
          DBNAME: testdb
          UPDATEAVAIL: "NO"
        options: --privileged
        ports:
          - 50000:50000
    steps:
      - uses: actions/checkout@v3

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
          poetry-flags: --all-extras --with=tests

      - name: Start Docker Compose
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: ./docker-compose.yaml

      - name: Wait for Docker Servers
        timeout-minutes: 1
        shell: bash
        run: |
          until bash ./.github/workflows/resources/docker_compose_ready.sh; do
            sleep 2
          done

      - name: Wait for DB/2
        timeout-minutes: 2
        run: |
          until docker logs "${{ job.services.ibm_db2.id }}" 2>&1 | grep -q "Setup has completed"; do 
            sleep 10
            echo Waiting
          done

      - name: Run Tests
        uses: ./.github/actions/test
        with:
          arguments: --ibm_db2 -m ibm_db2

  db2_test_6:
    name: "DB2 Tests (6) - ${{ matrix.os }} / ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 30
    strategy:
      matrix:
        os: [Ubuntu]
        python-version: ['3.11']
    services:
      ibm_db2:
        image: ibmcom/db2:11.5.5.1
        env:
          LICENSE: accept
          DB2INSTANCE: db2inst1
          DB2INST1_PASSWORD: password
          DBNAME: testdb
          UPDATEAVAIL: "NO"
        options: --privileged
        ports:
          - 50000:50000
    steps:
      - uses: actions/checkout@v3

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
          poetry-flags: --all-extras --with=tests

      - name: Start Docker Compose
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: ./docker-compose.yaml

      - name: Wait for Docker Servers
        timeout-minutes: 1
        shell: bash
        run: |
          until bash ./.github/workflows/resources/docker_compose_ready.sh; do
            sleep 2
          done

      - name: Wait for DB/2
        timeout-minutes: 2
        run: |
          until docker logs "${{ job.services.ibm_db2.id }}" 2>&1 | grep -q "Setup has completed"; do 
            sleep 10
            echo Waiting
          done

      - name: Run Tests
        uses: ./.github/actions/test
        with:
          arguments: --ibm_db2 -m ibm_db2

